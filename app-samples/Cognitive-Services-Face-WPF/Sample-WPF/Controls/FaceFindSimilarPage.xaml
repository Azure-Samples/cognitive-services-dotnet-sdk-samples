<!--
//
// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT license.
//
// Microsoft Cognitive Services (formerly Project Oxford): https://www.microsoft.com/cognitive-services
//
// Microsoft Cognitive Services (formerly Project Oxford) GitHub:
// https://github.com/Microsoft/Cognitive-Face-Windows
//
// Copyright (c) Microsoft Corporation
// All rights reserved.
//
// MIT License:
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-->
<Page x:Class="Microsoft.ProjectOxford.Face.Controls.FaceFindSimilarPage"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:uc="clr-namespace:Microsoft.ProjectOxford.Face.Controls"
             mc:Ignorable="d" x:Name="FaceFindSimilarPane"
             d:DesignHeight="600" d:DesignWidth="710" MinHeight="360" FontSize="14">
   <ScrollViewer>
       <Grid HorizontalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="340" />
                    <ColumnDefinition Width="30" />
                    <ColumnDefinition Width="340" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="54" />
                    <RowDefinition Height="45" />
                    <RowDefinition Height="300" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <ScrollViewer Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3">
                    <TextBlock  HorizontalAlignment="Left" Text="{Binding FaceFindSimilarDescription}" TextWrapping="Wrap"></TextBlock>
                </ScrollViewer>
                <Button Grid.Column="0" Grid.Row="1" Width="300" Height="35" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,0,0,5" Background="#2196f3" Foreground="White" BorderBrush="Transparent" Content="Load Candidate Faces" Click="FolderPicker_Click"/>
                <Button Grid.Column="2" Grid.Row="1" Width="300" Height="35" Content="Open Query Face" HorizontalAlignment="Left" VerticalAlignment="Top" Background="#2196f3" Foreground="White" BorderBrush="Transparent" Margin="0, 0, 0, 5" IsEnabled="False" Name="OpenFaceButton"  Click="FindSimilar_Click"/>
                <ListView Grid.Column="0" Grid.Row="2" Grid.RowSpan="2" Width="340" HorizontalAlignment="Left" VerticalAlignment="Top"   
                  ItemsSource="{Binding FacesCollection, ElementName=FaceFindSimilarPane}" BorderBrush="Transparent" Background="Transparent" Margin="-1, -3, -1, -3" uc:ControlHelper.PassMouseWheelToParent="True">
                    <ListView.Style>
                        <Style TargetType="ListView">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=Items.Count}" Value="0">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <Image Grid.Column="0" Height="64" Width="64" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="1,3,1,3">
                                                    <Image.Style>
                                                        <Style TargetType="{x:Type Image}">
                                                            <Setter Property="Source" Value="/FaceAPI-WPF-Samples;component/Assets/default.jpg" />
                                                        </Style>
                                                    </Image.Style>
                                                </Image>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ListView.Style>
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel Width="310" Margin="0" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="Focusable" Value="False" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsSelected" Value="true">
                                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                            </Trigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsSelected" Value="true"/>
                                                    <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                                            </MultiTrigger>
                                            <Trigger Property="IsEnabled" Value="false">
                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="Transparent"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Image Width="64" Height="64" Margin="1,3,1,3">
                                <Image.Source>
                                    <CroppedBitmap Source="{Binding ImageFile}" SourceRect="{Binding UIRect}" />
                                </Image.Source>
                            </Image>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
                <Grid Grid.Column="2" Grid.Row="2" Width="300" Height="300" HorizontalAlignment="Left" VerticalAlignment="Top" >
                    <ItemsControl HorizontalAlignment="Left" VerticalAlignment="Top" ItemsSource="{Binding TargetFaces, ElementName=FaceFindSimilarPane}" Panel.ZIndex="999" Height="{Binding MaxImageSize, ElementName=FaceFindSimilarPane}" Width="{Binding MaxImageSize, ElementName=FaceFindSimilarPane}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Canvas Background="Transparent" HorizontalAlignment="Center" VerticalAlignment="Center" Height="{Binding MaxImageSize, ElementName=FaceFindSimilarPane}" Width="{Binding MaxImageSize, ElementName=FaceFindSimilarPane}" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemContainerStyle>
                            <Style TargetType="ContentPresenter">
                                <Setter Property="Canvas.Left" Value="{Binding Left}" />
                                <Setter Property="Canvas.Top" Value="{Binding Top}" />
                            </Style>
                        </ItemsControl.ItemContainerStyle>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid Background="#80000000" Height="14" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="0, -14, 0, 0">
                                        <TextBlock Text="{Binding PersonName}" Foreground="White" FontSize="12" Height="14"/>
                                    </Grid>
                                    <Rectangle Width="{Binding Width}" Height="{Binding Height}" Stroke="#FF26B8F4" StrokeThickness="1" />
                                </Grid>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                    <Image HorizontalAlignment="Center" VerticalAlignment="Center" Height="{Binding MaxImageSize, ElementName=FaceFindSimilarPane}" Width="{Binding MaxImageSize, ElementName=FaceFindSimilarPane}" x:Name="ImageDisplay">
                        <Image.Style>
                            <Style TargetType="{x:Type Image}">
                                <Setter Property="Source" Value="{Binding SelectedFile, ElementName=FaceFindSimilarPane}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SelectedFile, ElementName=FaceFindSimilarPane}" Value="{x:Null}">
                                        <Setter Property="Source" Value="/FaceAPI-WPF-Samples;component/Assets/default.jpg" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                </Grid>
                <StackPanel Grid.Column="2" Grid.Row="3" Grid.RowSpan="1">
                    <Grid Width="300">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30" />
                            <RowDefinition Height="30" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="30" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.Style>
                            <Style TargetType="{x:Type Grid}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SelectedFile, ElementName=FaceFindSimilarPane}" Value="{x:Null}">
                                        <Setter Property="Height" Value="0"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <TextBlock Grid.Row ="0" Text="Find 4 Similar Candidate Faces Results:" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0, 5, 0, 0"  />
                        <TextBlock Grid.Row ="1" Text="matchPerson Mode:" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0, 5, 0, 0" TextWrapping="Wrap" />
                        <ListView Grid.Row ="2"  Width="330" HorizontalAlignment="Left" Margin="0, 15" VerticalAlignment="Top" BorderBrush="Transparent" ItemsSource="{Binding FindSimilarMatchPersonCollection, ElementName=FaceFindSimilarPane}" uc:ControlHelper.PassMouseWheelToParent="True">
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <Grid Margin="0, 3, 0, 3">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="64" />
                                            <RowDefinition Height="24" />
                                            <RowDefinition Height="*" />
                                        </Grid.RowDefinitions>
                                        <Image Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                            <Image.Source>
                                                <CroppedBitmap Source="{Binding QueryFace.ImageFile}" SourceRect="{Binding QueryFace.UIRect}" />
                                            </Image.Source>
                                        </Image>
                                        <TextBlock Grid.Row="1" Text="Similar Faces Ranked by Similarity" Margin="8,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" />
                                        <ListView ItemsSource="{Binding Faces}" Grid.Column="0" Grid.Row="2" BorderThickness="0" Margin="-6, 0, 0, 0">
                                            <ListView.Style>
                                                <Style TargetType="ListView">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=Items.Count}" Value="0">
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate>
                                                                        <TextBlock Text="no one" Margin="10,0,0,0" />
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ListView.Style>
                                            <ListView.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <WrapPanel Orientation="Horizontal" MaxWidth="320"></WrapPanel>
                                                </ItemsPanelTemplate>
                                            </ListView.ItemsPanel>
                                            <ListView.ItemTemplate>
                                                <DataTemplate>
                                                    <Grid>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="64"></RowDefinition>
                                                            <RowDefinition Height="20"></RowDefinition>
                                                        </Grid.RowDefinitions>
                                                        <Image Grid.Row ="0" Width="64" Height="64">
                                                            <Image.Source>
                                                                <CroppedBitmap Source="{Binding ImageFile}" SourceRect="{Binding UIRect}" />
                                                            </Image.Source>
                                                        </Image>
                                                        <TextBlock Grid.Row="1" Text="{Binding Confidence, StringFormat=N2}" VerticalAlignment="Center" HorizontalAlignment="Center"></TextBlock>
                                                    </Grid>
                                                </DataTemplate>
                                            </ListView.ItemTemplate>
                                            <ListView.ItemContainerStyle>
                                                <Style TargetType="ListViewItem">
                                                    <Style.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Background" Value="Transparent"/>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                    <Setter Property="Focusable" Value="False" />
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                                                <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                </Border>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsSelected" Value="true">
                                                                        <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                                                    </Trigger>
                                                                    <MultiTrigger>
                                                                        <MultiTrigger.Conditions>
                                                                            <Condition Property="IsSelected" Value="true"/>
                                                                            <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                                                        </MultiTrigger.Conditions>
                                                                        <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                                                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                                                                    </MultiTrigger>
                                                                    <Trigger Property="IsEnabled" Value="false">
                                                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </ListView.ItemContainerStyle>
                                        </ListView>
                                    </Grid>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="Transparent"/>
                                        </Trigger>
                                    </Style.Triggers>
                                    <Setter Property="BorderBrush" Value="LightGray" />
                                    <Setter Property="BorderThickness" Value="0, 2, 0, 0" />
                                    <Setter Property="Focusable" Value="False" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                                <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsSelected" Value="true">
                                                        <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                                    </Trigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="IsSelected" Value="true"/>
                                                            <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                                                    </MultiTrigger>
                                                    <Trigger Property="IsEnabled" Value="false">
                                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ListView.ItemContainerStyle>
                        </ListView>
                        <TextBlock Grid.Row ="3" Text="matchFace Mode:" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0, 5, 0, 0" TextWrapping="Wrap" />
                        <ListView Grid.Row ="4" Width="330" HorizontalAlignment="Left" Margin="0, 15" VerticalAlignment="Top" BorderBrush="Transparent" ScrollViewer.VerticalScrollBarVisibility="Hidden" ItemsSource="{Binding FindSimilarMatchFaceCollection, ElementName=FaceFindSimilarPane}" uc:ControlHelper.PassMouseWheelToParent="True">
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <Grid Margin="0, 3, 0, 3">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="64" />
                                            <RowDefinition Height="24" />
                                            <RowDefinition Height="*" />
                                        </Grid.RowDefinitions>
                                        <Image Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                            <Image.Source>
                                                <CroppedBitmap Source="{Binding QueryFace.ImageFile}" SourceRect="{Binding QueryFace.UIRect}" />
                                            </Image.Source>
                                        </Image>
                                        <TextBlock Grid.Row="1" Text="Similar Faces Ranked by Similarity" Margin="8,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" />
                                        <ListView ItemsSource="{Binding Faces}" Grid.Column="0" Grid.Row="2" BorderThickness="0" Margin="-6, 0, 0, 0">
                                            <ListView.Style>
                                                <Style TargetType="ListView">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=Items.Count}" Value="0">
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate>
                                                                        <TextBlock Text="no one" Margin="10,0,0,0" />
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ListView.Style>
                                            <ListView.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <WrapPanel Orientation="Horizontal" MaxWidth="320"></WrapPanel>
                                                </ItemsPanelTemplate>
                                            </ListView.ItemsPanel>
                                            <ListView.ItemTemplate>
                                                <DataTemplate>
                                                    <Grid>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="64"></RowDefinition>
                                                            <RowDefinition Height="20"></RowDefinition>
                                                        </Grid.RowDefinitions>
                                                        <Image Grid.Row ="0" Width="64" Height="64">
                                                            <Image.Source>
                                                                <CroppedBitmap Source="{Binding ImageFile}" SourceRect="{Binding UIRect}" />
                                                            </Image.Source>
                                                        </Image>
                                                        <TextBlock Grid.Row="1" Text="{Binding Confidence, StringFormat=N2}" VerticalAlignment="Center" HorizontalAlignment="Center"></TextBlock>
                                                    </Grid>

                                                </DataTemplate>
                                            </ListView.ItemTemplate>
                                            <ListView.ItemContainerStyle>
                                                <Style TargetType="ListViewItem">
                                                    <Style.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Background" Value="Transparent"/>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                    <Setter Property="Focusable" Value="False" />
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                                                <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                </Border>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsSelected" Value="true">
                                                                        <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                                                    </Trigger>
                                                                    <MultiTrigger>
                                                                        <MultiTrigger.Conditions>
                                                                            <Condition Property="IsSelected" Value="true"/>
                                                                            <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                                                        </MultiTrigger.Conditions>
                                                                        <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                                                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                                                                    </MultiTrigger>
                                                                    <Trigger Property="IsEnabled" Value="false">
                                                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </ListView.ItemContainerStyle>
                                        </ListView>
                                    </Grid>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="Transparent"/>
                                        </Trigger>
                                    </Style.Triggers>
                                    <Setter Property="BorderBrush" Value="LightGray" />
                                    <Setter Property="BorderThickness" Value="0, 2, 0, 0" />
                                    <Setter Property="Focusable" Value="False" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                                <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsSelected" Value="true">
                                                        <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                                    </Trigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="IsSelected" Value="true"/>
                                                            <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                                                    </MultiTrigger>
                                                    <Trigger Property="IsEnabled" Value="false">
                                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ListView.ItemContainerStyle>
                        </ListView>
                    </Grid>
                </StackPanel>
            </Grid>
   </ScrollViewer> 
</Page>
